<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.chinasofti.postbar.mapper.RegisterMapper">
    <resultMap id="BaseResultMap" type="com.chinasofti.postbar.dto.Register">
        <id column="regUUID" jdbcType="VARCHAR" property="regUUID"/>
        <result column="userUUID" jdbcType="VARCHAR" property="userUUID"/>
        <result column="regSex" jdbcType="VARCHAR" property="regSex"/>
        <result column="regAge" jdbcType="INTEGER" property="regAge"/>
        <result column="regEmial" jdbcType="VARCHAR" property="regEmial"/>
        <result column="regPhoto" jdbcType="VARCHAR" property="regPhoto"/>
        <result column="regTime" jdbcType="TIMESTAMP" property="regTime"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
    regUUID, userUUID, regSex, regAge, regEmial, regPhoto, regTime
  </sql>
    <select id="selectByExample" parameterType="com.chinasofti.postbar.dto.RegisterExample" resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from pb_register
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from pb_register
        where regUUID = #{regUUID,jdbcType=VARCHAR}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from pb_register
    where regUUID = #{regUUID,jdbcType=VARCHAR}
  </delete>
    <delete id="deleteByExample" parameterType="com.chinasofti.postbar.dto.RegisterExample">
        delete from pb_register
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="com.chinasofti.postbar.dto.Register">
    insert into pb_register (regUUID, userUUID, regSex, 
      regAge, regEmial, regPhoto, 
      regTime)
    values (#{regUUID,jdbcType=VARCHAR}, #{userUUID,jdbcType=VARCHAR}, #{regSex,jdbcType=VARCHAR}, 
      #{regAge,jdbcType=INTEGER}, #{regEmial,jdbcType=VARCHAR}, #{regPhoto,jdbcType=VARCHAR}, 
      #{regTime,jdbcType=TIMESTAMP})
  </insert>
    <insert id="insertSelective" parameterType="com.chinasofti.postbar.dto.Register">
        insert into pb_register
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="regUUID != null">
                regUUID,
            </if>
            <if test="userUUID != null">
                userUUID,
            </if>
            <if test="regSex != null">
                regSex,
            </if>
            <if test="regAge != null">
                regAge,
            </if>
            <if test="regEmial != null">
                regEmial,
            </if>
            <if test="regPhoto != null">
                regPhoto,
            </if>
            <if test="regTime != null">
                regTime,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="regUUID != null">
                #{regUUID,jdbcType=VARCHAR},
            </if>
            <if test="userUUID != null">
                #{userUUID,jdbcType=VARCHAR},
            </if>
            <if test="regSex != null">
                #{regSex,jdbcType=VARCHAR},
            </if>
            <if test="regAge != null">
                #{regAge,jdbcType=INTEGER},
            </if>
            <if test="regEmial != null">
                #{regEmial,jdbcType=VARCHAR},
            </if>
            <if test="regPhoto != null">
                #{regPhoto,jdbcType=VARCHAR},
            </if>
            <if test="regTime != null">
                #{regTime,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.chinasofti.postbar.dto.RegisterExample" resultType="java.lang.Long">
        select count(*) from pb_register
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update pb_register
        <set>
            <if test="record.regUUID != null">
                regUUID = #{record.regUUID,jdbcType=VARCHAR},
            </if>
            <if test="record.userUUID != null">
                userUUID = #{record.userUUID,jdbcType=VARCHAR},
            </if>
            <if test="record.regSex != null">
                regSex = #{record.regSex,jdbcType=VARCHAR},
            </if>
            <if test="record.regAge != null">
                regAge = #{record.regAge,jdbcType=INTEGER},
            </if>
            <if test="record.regEmial != null">
                regEmial = #{record.regEmial,jdbcType=VARCHAR},
            </if>
            <if test="record.regPhoto != null">
                regPhoto = #{record.regPhoto,jdbcType=VARCHAR},
            </if>
            <if test="record.regTime != null">
                regTime = #{record.regTime,jdbcType=TIMESTAMP},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update pb_register
        set regUUID = #{record.regUUID,jdbcType=VARCHAR},
        userUUID = #{record.userUUID,jdbcType=VARCHAR},
        regSex = #{record.regSex,jdbcType=VARCHAR},
        regAge = #{record.regAge,jdbcType=INTEGER},
        regEmial = #{record.regEmial,jdbcType=VARCHAR},
        regPhoto = #{record.regPhoto,jdbcType=VARCHAR},
        regTime = #{record.regTime,jdbcType=TIMESTAMP}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.chinasofti.postbar.dto.Register">
        update pb_register
        <set>
            <if test="userUUID != null">
                userUUID = #{userUUID,jdbcType=VARCHAR},
            </if>
            <if test="regSex != null">
                regSex = #{regSex,jdbcType=VARCHAR},
            </if>
            <if test="regAge != null">
                regAge = #{regAge,jdbcType=INTEGER},
            </if>
            <if test="regEmial != null">
                regEmial = #{regEmial,jdbcType=VARCHAR},
            </if>
            <if test="regPhoto != null">
                regPhoto = #{regPhoto,jdbcType=VARCHAR},
            </if>
            <if test="regTime != null">
                regTime = #{regTime,jdbcType=TIMESTAMP},
            </if>
        </set>
        where regUUID = #{regUUID,jdbcType=VARCHAR}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.chinasofti.postbar.dto.Register">
    update pb_register
    set userUUID = #{userUUID,jdbcType=VARCHAR},
      regSex = #{regSex,jdbcType=VARCHAR},
      regAge = #{regAge,jdbcType=INTEGER},
      regEmial = #{regEmial,jdbcType=VARCHAR},
      regPhoto = #{regPhoto,jdbcType=VARCHAR},
      regTime = #{regTime,jdbcType=TIMESTAMP}
    where regUUID = #{regUUID,jdbcType=VARCHAR}
  </update>
</mapper>